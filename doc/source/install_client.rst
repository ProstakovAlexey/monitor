Клиентская часть 
================
.. |Сопоставление обработчиков| image:: _static/obr_1.jpg

Установка выполняется на любом сервере, который может обратится в 80 порты ТИ и отправлять данные на Zabbix сервер.

Установка
---------
Программа написано и была проверена на python 3.5, но я думаю она будет работать под любым python3.

1. Установите python3 (https://www.python.org/downloads/). При установке обратите внимание, что надо ставить для всех пользователей и добавить python в **Path**.
2. Создайте произвольную папку и скопируйте туда файлы клиентской части - :ref:`Состав`.

Проверка работы
---------------
1. Проверку работы клиентской части нужно проводить только после успешной установки и проверки работы серверной части.
2. Откройте CMD(от пользователя) и перейдите в папку с установленной клиентской часть.
3. Выполните команду: `python monitorRequest.py -h`. Должна появится справка::

    usage: monitorRequest.py [-h] [-a addr] [-p port] [-s site] [-m method]

    Программа делает запрос к сервису мониторинга ТИ

    optional arguments:
    -h, --help  show this help message and exit
    -a addr     Имя или IP адрес сервера для запроса
    -p port     Порт сервера для запроса
    -s site     Сайт
    -m method   Вид сведений. Возможные значения: requestSmev - запросы в СМЭВ;
              requestPGU - заявления от ПГУ/МФЦ; responsePGU - ответы на
              заявления ПГУ/МФЦ; responseSmev - ответы на СМЭВ запросы

4. Попробуйте запрос на виды сведений, например на кол-во запросов в СМЭВ: `python monitorRequest.py -a 192.168.0.104 -p 80 -s monitor -m requestSmev`. Результат - число больше 0, если -1 - по возникла ошибка.

Работа клиентской части
-----------------------
Ниже приведу примеры вызова клиентской программы, которые Вы можете использовать для интеграции с Zabbix и подобными системами. Обратите внимание, что данные кэшируются, чтобы избежать лишней нагрузки на сервер. Данные возвращаются за последний час, т.е. если Вы вызвали программу в 11:34, то придут данные с 10:34-11:34, более подробно можете посмотреть в :ref:`server_work`.

Кол-во заявления ПГУ/МФЦ:



